name: ðŸ§ª Tests & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest flake8 black
    
    - name: Code formatting check with Black
      run: |
        black --check --diff .
    
    - name: Lint with flake8
      run: |
        # Zatrzymaj build jeÅ›li sÄ… bÅ‚Ä™dy skÅ‚adni lub niezdefiniowane nazwy
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # OstrzeÅ¼enia dla pozostaÅ‚ych problemÃ³w
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
      env:
        PYTHONPATH: .
    
    - name: Test Streamlit app syntax
      run: |
        python -m py_compile app.py
        streamlit run app.py --server.headless true &
        sleep 10
        kill %1

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt
